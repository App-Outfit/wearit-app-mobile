/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    '/api/v1/auth/signup': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Signup */
        post: operations['signup_api_v1_auth_signup_post'];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    '/api/v1/auth/login': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Login */
        post: operations['login_api_v1_auth_login_post'];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    '/api/v1/auth/logout': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Logout
         * @description Logout endpoint.
         *     Pour une authentification JWT stateless, le serveur demande simplement au client de supprimer son token.
         */
        post: operations['logout_api_v1_auth_logout_post'];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    '/api/v1/auth/account': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * Delete Account
         * @description Delete account endpoint.
         *     Supprime le compte de l'utilisateur actuellement connect√©.
         */
        delete: operations['delete_account_api_v1_auth_account_delete'];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    '/api/v1/auth/forgot-password': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Request a password reset code */
        post: operations['forgot_password_api_v1_auth_forgot_password_post'];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    '/api/v1/auth/forgot-password/verify': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Verify the reset code */
        post: operations['verify_reset_code_api_v1_auth_forgot_password_verify_post'];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    '/api/v1/auth/reset-password': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Reset the password */
        post: operations['reset_password_api_v1_auth_reset_password_post'];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    '/api/v1/user/profile': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Profile */
        get: operations['get_profile_api_v1_user_profile_get'];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update Profile */
        patch: operations['update_profile_api_v1_user_profile_patch'];
        trace?: never;
    };
    '/api/v1/user/credits': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Credits */
        get: operations['get_credits_api_v1_user_credits_get'];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    '/api/v1/user/referral/code': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Referral Code */
        get: operations['get_referral_code_api_v1_user_referral_code_get'];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    '/api/v1/body/upload': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Upload Body */
        post: operations['upload_body_api_v1_body_upload_post'];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    '/api/v1/body/list': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Bodies */
        get: operations['list_bodies_api_v1_body_list_get'];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    '/api/v1/body/current': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Current Body */
        get: operations['get_current_body_api_v1_body_current_get'];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    '/api/v1/body/{body_id}/masks': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Masks */
        get: operations['get_masks_api_v1_body__body_id__masks_get'];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    '/api/v1/body/{body_id}': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete Body */
        delete: operations['delete_body_api_v1_body__body_id__delete'];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    '/api/v1/clothing/upload': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Upload Clothing */
        post: operations['upload_clothing_api_v1_clothing_upload_post'];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    '/api/v1/clothing': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Clothes */
        get: operations['get_clothes_api_v1_clothing_get'];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    '/api/v1/clothing/categories': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Categories */
        get: operations['get_categories_api_v1_clothing_categories_get'];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    '/api/v1/clothing/{clothing_id}': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Clothing By Id */
        get: operations['get_clothing_by_id_api_v1_clothing__clothing_id__get'];
        put?: never;
        post?: never;
        /** Delete Clothing */
        delete: operations['delete_clothing_api_v1_clothing__clothing_id__delete'];
        options?: never;
        head?: never;
        /** Update Clothing */
        patch: operations['update_clothing_api_v1_clothing__clothing_id__patch'];
        trace?: never;
    };
    '/api/v1/tryon': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All Tryons */
        get: operations['get_all_tryons_api_v1_tryon_get'];
        put?: never;
        /** Create Tryon */
        post: operations['create_tryon_api_v1_tryon_post'];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    '/api/v1/tryon/{tryon_id}': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Tryon By Id */
        get: operations['get_tryon_by_id_api_v1_tryon__tryon_id__get'];
        put?: never;
        post?: never;
        /** Delete Tryon */
        delete: operations['delete_tryon_api_v1_tryon__tryon_id__delete'];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    '/api/v1/favorites': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Favorites */
        get: operations['list_favorites_api_v1_favorites_get'];
        put?: never;
        /** Add Favorite */
        post: operations['add_favorite_api_v1_favorites_post'];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    '/api/v1/favorites/{favorite_id}': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Favorite */
        get: operations['get_favorite_api_v1_favorites__favorite_id__get'];
        put?: never;
        post?: never;
        /** Delete Favorite */
        delete: operations['delete_favorite_api_v1_favorites__favorite_id__delete'];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    '/api/v1/payment/create-checkout-session': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Checkout Session */
        post: operations['create_checkout_session_api_v1_payment_create_checkout_session_post'];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    '/api/v1/payment/webhook/stripe': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Stripe Webhook */
        post: operations['stripe_webhook_api_v1_payment_webhook_stripe_post'];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * AuthDeleteResponse
         * @description Response model after deleting an account.
         */
        AuthDeleteResponse: {
            /**
             * Message
             * @description Account deletion confirmation
             * @default Account deleted successfully
             */
            message: string;
        };
        /**
         * AuthLogin
         * @description Request model for logging in.
         */
        AuthLogin: {
            /**
             * Email
             * Format: email
             * @description User's email address
             */
            email: string;
            /**
             * Password
             * @description User's password
             */
            password: string;
        };
        /**
         * AuthLoginResponse
         * @description Response model after successfully logging in.
         */
        AuthLoginResponse: {
            /**
             * Message
             * @description Login success message
             * @default Logged in successfully
             */
            message: string;
            /**
             * Token
             * @description JWT token for authentication
             */
            token: string;
        };
        /**
         * AuthLogoutResponse
         * @description Response model after logging out.
         */
        AuthLogoutResponse: {
            /**
             * Message
             * @description Logout success message
             * @default Logged out successfully
             */
            message: string;
        };
        /**
         * AuthSignup
         * @description Request model for signing up.
         */
        AuthSignup: {
            /**
             * Email
             * Format: email
             * @description User's email address
             */
            email: string;
            /**
             * Password
             * @description User's password
             */
            password: string;
            /**
             * First Name
             * @description User's first name
             */
            first_name?: string | null;
            /**
             * Gender
             * @description User's gender (optional)
             */
            gender?: string | null;
            /**
             * Answers
             * @description Custom answers to onboarding questions
             */
            answers?: {
                [key: string]: string;
            } | null;
            /**
             * Referral Code
             * @description Referral code received from another user
             */
            referral_code?: string | null;
        };
        /**
         * AuthSignupResponse
         * @description Response model after successfully signing up.
         */
        AuthSignupResponse: {
            /**
             * Message
             * @description Signup success message
             * @default Signed up successfully
             */
            message: string;
            /**
             * Token
             * @description JWT token for authentication
             */
            token: string;
        };
        /** BodyItem */
        BodyItem: {
            /** Id */
            id: string;
            /** Image Url */
            image_url: string;
            /** Mask Upper */
            mask_upper?: string | null;
            /** Mask Lower */
            mask_lower?: string | null;
            /** Mask Dress */
            mask_dress?: string | null;
            /** Status */
            status: string;
            /** Is Default */
            is_default: boolean;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** BodyListResponse */
        BodyListResponse: {
            /** Bodies */
            bodies: components['schemas']['BodyItem'][];
        };
        /** BodyMasksResponse */
        BodyMasksResponse: {
            /** Mask Upper */
            mask_upper: string | null;
            /** Mask Lower */
            mask_lower: string | null;
            /** Mask Dress */
            mask_dress: string | null;
        };
        /** BodyUploadResponse */
        BodyUploadResponse: {
            /** Body Id */
            body_id: string;
            /**
             * Status
             * @default pending
             */
            status: string;
            /** Message */
            message: string;
        };
        /** Body_upload_body_api_v1_body_upload_post */
        Body_upload_body_api_v1_body_upload_post: {
            /**
             * Image
             * Format: binary
             */
            image: string;
        };
        /** Body_upload_clothing_api_v1_clothing_upload_post */
        Body_upload_clothing_api_v1_clothing_upload_post: {
            /**
             * File
             * Format: binary
             */
            file: string;
        };
        /** CategoryListResponse */
        CategoryListResponse: {
            /** Categories */
            categories: string[];
        };
        /** ClothingDeleteResponse */
        ClothingDeleteResponse: {
            /** Message */
            message: string;
        };
        /** ClothingDetailResponse */
        ClothingDetailResponse: {
            /** Id */
            id: string;
            /** Image Url */
            image_url: string;
            /** Resized Url */
            resized_url: string | null;
            /** Category */
            category: string;
            /** Name */
            name: string | null;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** ClothingItem */
        ClothingItem: {
            /** Id */
            id: string;
            /** Image Url */
            image_url: string;
            /** Resized Url */
            resized_url: string | null;
            /** Category */
            category: string;
            /** Name */
            name: string | null;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** ClothingListResponse */
        ClothingListResponse: {
            /** Clothes */
            clothes: components['schemas']['ClothingItem'][];
        };
        /** ClothingUpdate */
        ClothingUpdate: {
            /** Category */
            category?: string | null;
            /** Name */
            name?: string | null;
        };
        /** ClothingUploadResponse */
        ClothingUploadResponse: {
            /** Clothing Id */
            clothing_id: string;
            /** Image Url */
            image_url: string;
            /** Resized Url */
            resized_url?: string | null;
            /** Category */
            category: string;
            /** Name */
            name: string | null;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Message */
            message: string;
        };
        /** CreateCheckoutSessionRequest */
        CreateCheckoutSessionRequest: {
            /**
             * Pack
             * @description Nom du pack √† acheter
             * @enum {string}
             */
            pack: 'free' | 'decouverte' | 'standard' | 'creatif' | 'illimite';
        };
        /** CreateCheckoutSessionResponse */
        CreateCheckoutSessionResponse: {
            /**
             * Checkout Url
             * @description URL Stripe Checkout pour effectuer le paiement
             */
            checkout_url: string;
        };
        /** CreditsResponse */
        CreditsResponse: {
            /** User Id */
            user_id: string;
            /** Credits */
            credits: number;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at: string;
        };
        /** FavoriteCreateRequest */
        FavoriteCreateRequest: {
            /** Body Id */
            body_id: string;
            /** Clothing Ids */
            clothing_ids: string[];
        };
        /** FavoriteDeleteResponse */
        FavoriteDeleteResponse: {
            /** Message */
            message: string;
        };
        /** FavoriteListResponse */
        FavoriteListResponse: {
            /** Favorites */
            favorites: components['schemas']['FavoriteResponse'][];
        };
        /** FavoriteResponse */
        FavoriteResponse: {
            /** Id */
            id: string;
            /** Body Id */
            body_id: string;
            /** Clothing Ids */
            clothing_ids: string[];
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at: string;
        };
        /** ForgotPasswordRequest */
        ForgotPasswordRequest: {
            /**
             * Email
             * Format: email
             * @description Email to send reset code to
             */
            email: string;
        };
        /** ForgotPasswordResponse */
        ForgotPasswordResponse: {
            /**
             * Message
             * @description Message confirming reset code sent
             */
            message: string;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components['schemas']['ValidationError'][];
        };
        /** ReferralCodeResponse */
        ReferralCodeResponse: {
            /** Referral Code */
            referral_code: string;
        };
        /** ResetPasswordRequest */
        ResetPasswordRequest: {
            /**
             * Email
             * Format: email
             * @description Email address
             */
            email: string;
            /**
             * Code
             * @description 4-digit reset code
             */
            code: string;
            /**
             * New Password
             * @description New password (min. 8 chars)
             */
            new_password: string;
        };
        /** ResetPasswordResponse */
        ResetPasswordResponse: {
            /**
             * Message
             * @description Confirmation message after password reset
             */
            message: string;
        };
        /** StripeWebhookResponse */
        StripeWebhookResponse: {
            /**
             * Message
             * @description Message indiquant le r√©sultat du traitement du webhook
             */
            message: string;
        };
        /** TryonCreateRequest */
        TryonCreateRequest: {
            /** Body Id */
            body_id: string;
            /** Clothing Id */
            clothing_id: string;
        };
        /** TryonCreateResponse */
        TryonCreateResponse: {
            /** Tryon Id */
            tryon_id: string;
            /** Status */
            status: string;
            /** Message */
            message: string;
            /** Version */
            version: number;
        };
        /** TryonDeleteResponse */
        TryonDeleteResponse: {
            /** Message */
            message: string;
        };
        /** TryonDetailResponse */
        TryonDetailResponse: {
            /** Id */
            id: string;
            /** Body Id */
            body_id: string;
            /** Clothing Id */
            clothing_id: string;
            /** Output Url */
            output_url?: string | null;
            /** Status */
            status: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Version */
            version: number;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at: string;
        };
        /** TryonItem */
        TryonItem: {
            /** Id */
            id: string;
            /** Body Id */
            body_id: string;
            /** Clothing Id */
            clothing_id: string;
            /** Output Url */
            output_url?: string | null;
            /** Status */
            status: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Version */
            version: number;
        };
        /** TryonListResponse */
        TryonListResponse: {
            /** Tryons */
            tryons: components['schemas']['TryonItem'][];
        };
        /** UserProfileResponse */
        UserProfileResponse: {
            /** User Id */
            user_id: string;
            /** First Name */
            first_name: string | null;
            /** Email */
            email: string;
            /** Credits */
            credits: number;
            /** Referral Code */
            referral_code: string | null;
            /** Answers */
            answers?: {
                [key: string]: string;
            } | null;
        };
        /** UserProfileUpdate */
        UserProfileUpdate: {
            /** First Name */
            first_name?: string | null;
            /** Last Name */
            last_name?: string | null;
            /** Answers */
            answers?: {
                [key: string]: string;
            } | null;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
        /** VerifyResetCodeRequest */
        VerifyResetCodeRequest: {
            /**
             * Email
             * Format: email
             * @description Email associated with the reset code
             */
            email: string;
            /**
             * Code
             * @description 4-digit reset code
             */
            code: string;
        };
        /** VerifyResetCodeResponse */
        VerifyResetCodeResponse: {
            /**
             * Valid
             * @description Indicates whether the reset code is valid
             */
            valid: boolean;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    signup_api_v1_auth_signup_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                'application/json': components['schemas']['AuthSignup'];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['AuthSignupResponse'];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['HTTPValidationError'];
                };
            };
        };
    };
    login_api_v1_auth_login_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                'application/json': components['schemas']['AuthLogin'];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['AuthLoginResponse'];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['HTTPValidationError'];
                };
            };
        };
    };
    logout_api_v1_auth_logout_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['AuthLogoutResponse'];
                };
            };
        };
    };
    delete_account_api_v1_auth_account_delete: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['AuthDeleteResponse'];
                };
            };
        };
    };
    forgot_password_api_v1_auth_forgot_password_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                'application/json': components['schemas']['ForgotPasswordRequest'];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['ForgotPasswordResponse'];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['HTTPValidationError'];
                };
            };
        };
    };
    verify_reset_code_api_v1_auth_forgot_password_verify_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                'application/json': components['schemas']['VerifyResetCodeRequest'];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['VerifyResetCodeResponse'];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['HTTPValidationError'];
                };
            };
        };
    };
    reset_password_api_v1_auth_reset_password_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                'application/json': components['schemas']['ResetPasswordRequest'];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['ResetPasswordResponse'];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['HTTPValidationError'];
                };
            };
        };
    };
    get_profile_api_v1_user_profile_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['UserProfileResponse'];
                };
            };
        };
    };
    update_profile_api_v1_user_profile_patch: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                'application/json': components['schemas']['UserProfileUpdate'];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['UserProfileResponse'];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['HTTPValidationError'];
                };
            };
        };
    };
    get_credits_api_v1_user_credits_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['CreditsResponse'];
                };
            };
        };
    };
    get_referral_code_api_v1_user_referral_code_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['ReferralCodeResponse'];
                };
            };
        };
    };
    upload_body_api_v1_body_upload_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                'multipart/form-data': components['schemas']['Body_upload_body_api_v1_body_upload_post'];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['BodyUploadResponse'];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['HTTPValidationError'];
                };
            };
        };
    };
    list_bodies_api_v1_body_list_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['BodyListResponse'];
                };
            };
        };
    };
    get_current_body_api_v1_body_current_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['BodyItem'];
                };
            };
        };
    };
    get_masks_api_v1_body__body_id__masks_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                body_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['BodyMasksResponse'];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['HTTPValidationError'];
                };
            };
        };
    };
    delete_body_api_v1_body__body_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                body_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['HTTPValidationError'];
                };
            };
        };
    };
    upload_clothing_api_v1_clothing_upload_post: {
        parameters: {
            query: {
                /** @description Clothing category (e.g., upper, lower, dress) */
                category: string;
                /** @description Optional name */
                name?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                'multipart/form-data': components['schemas']['Body_upload_clothing_api_v1_clothing_upload_post'];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['ClothingUploadResponse'];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['HTTPValidationError'];
                };
            };
        };
    };
    get_clothes_api_v1_clothing_get: {
        parameters: {
            query?: {
                /** @description Optional category filter */
                category?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['ClothingListResponse'];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['HTTPValidationError'];
                };
            };
        };
    };
    get_categories_api_v1_clothing_categories_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['CategoryListResponse'];
                };
            };
        };
    };
    get_clothing_by_id_api_v1_clothing__clothing_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                clothing_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['ClothingDetailResponse'];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['HTTPValidationError'];
                };
            };
        };
    };
    delete_clothing_api_v1_clothing__clothing_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                clothing_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['ClothingDeleteResponse'];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['HTTPValidationError'];
                };
            };
        };
    };
    update_clothing_api_v1_clothing__clothing_id__patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                clothing_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                'application/json': components['schemas']['ClothingUpdate'];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['ClothingDetailResponse'];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['HTTPValidationError'];
                };
            };
        };
    };
    get_all_tryons_api_v1_tryon_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['TryonListResponse'];
                };
            };
        };
    };
    create_tryon_api_v1_tryon_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                'application/json': components['schemas']['TryonCreateRequest'];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['TryonCreateResponse'];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['HTTPValidationError'];
                };
            };
        };
    };
    get_tryon_by_id_api_v1_tryon__tryon_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                tryon_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['TryonDetailResponse'];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['HTTPValidationError'];
                };
            };
        };
    };
    delete_tryon_api_v1_tryon__tryon_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                tryon_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['TryonDeleteResponse'];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['HTTPValidationError'];
                };
            };
        };
    };
    list_favorites_api_v1_favorites_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['FavoriteListResponse'];
                };
            };
        };
    };
    add_favorite_api_v1_favorites_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                'application/json': components['schemas']['FavoriteCreateRequest'];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['FavoriteResponse'];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['HTTPValidationError'];
                };
            };
        };
    };
    get_favorite_api_v1_favorites__favorite_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                favorite_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['FavoriteResponse'];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['HTTPValidationError'];
                };
            };
        };
    };
    delete_favorite_api_v1_favorites__favorite_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                favorite_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['FavoriteDeleteResponse'];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['HTTPValidationError'];
                };
            };
        };
    };
    create_checkout_session_api_v1_payment_create_checkout_session_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                'application/json': components['schemas']['CreateCheckoutSessionRequest'];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['CreateCheckoutSessionResponse'];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['HTTPValidationError'];
                };
            };
        };
    };
    stripe_webhook_api_v1_payment_webhook_stripe_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['StripeWebhookResponse'];
                };
            };
        };
    };
}
